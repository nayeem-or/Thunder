--- /workspace/source/thunder-core/src/main/java/network/thunder/core/database/HibernateHandler.java
+++ /workspace/source/thunder-core/src/main/java/network/thunder/core/database/HibernateHandler.java
@@ -490,8 +490,8 @@
                         PeeledOnion onion = null;
                         onion = onionHelper.loadMessage(keyServer, payment.onionObject);
 
-                        if (secrets.contains(payment.secret)) {
-                            paymentWrapper.paymentData.secret = getPaymentSecret(payment.secret);
+                        if (secrets.contains(payment.getSecret())) {
+                            paymentWrapper.paymentData.setSecret(getPaymentSecret(payment.getSecr)et());
                             paymentWrapper.statusSender = TO_BE_REDEEMED;
                         } else if (onion.isLastHop) {
                             System.out.println("Don't have the payment secret - refund..");
@@ -509,19 +509,19 @@
                             }
                         }
                     } else {
-                        paymentWrapper = getPayment(payment.secret);
+                        paymentWrapper = getPayment(payment.getSecret());
                         paymentWrapper.statusReceiver = EMBEDDED;
                     }
                 }
 
                 for (PaymentData payment : update.redeemedPayments) {
-                    addPaymentSecret(payment.secret);
-                    PaymentWrapper paymentWrapper = getPayment(payment.secret);
+                    addPaymentSecret(payment.getSecret());
+                    PaymentWrapper paymentWrapper = getPayment(payment.getSecret());
                     if (paymentWrapper == null) {
                         throw new RuntimeException("Redeemed an unknown payment?");
                     }
 
-                    paymentWrapper.paymentData.secret = payment.secret;
+                    paymentWrapper.paymentData.setSecret(payment.getSecret());
                     if (Objects.equals(paymentWrapper.receiver, nodeKey)) {
                         paymentWrapper.statusReceiver = REDEEMED;
                         paymentWrapper.statusSender = TO_BE_REDEEMED;
@@ -533,7 +533,7 @@
                 }
 
                 for (PaymentData payment : update.refundedPayments) {
-                    PaymentWrapper paymentWrapper = getPayment(payment.secret);
+                    PaymentWrapper paymentWrapper = getPayment(payment.getSecret());
                     if (paymentWrapper == null) {
                         throw new RuntimeException("Refunded an unknown payment?");
                     }
@@ -922,7 +922,7 @@
     public NodeKey getSenderOfPayment (PaymentSecret paymentSecret) {
         synchronized (payments) {
             for (PaymentWrapper payment : payments) {
-                if (payment.paymentData.secret.equals(paymentSecret)) {
+                if (payment.paymentData.getSecret().equals(paymentSecret)) {
                     return payment.sender;
                 }
             }
