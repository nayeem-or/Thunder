--- /workspace/source/thunder-core/src/main/java/network/thunder/core/communication/layer/low/encryption/EncryptionProcessorImpl.java
+++ /workspace/source/thunder-core/src/main/java/network/thunder/core/communication/layer/low/encryption/EncryptionProcessorImpl.java
@@ -89,7 +89,7 @@
     }
 
     private void processMessageToBeDecrypted (EncryptedMessage message) {
-        Message decryptedMessage = messageEncrypter.decrypt(message, node.ecdhKeySet);
+        Message decryptedMessage = messageEncrypter.decrypt(message, node.getEcdhKeySet());
         if (OUTPUT_MESSAGE) {
             if (decryptedMessage instanceof Gossip) {
                 if (OUTPUT_GOSSIP) {
@@ -113,7 +113,7 @@
             EncryptionInitialMessage encryptionInitial = (EncryptionInitialMessage) message;
 
             node.ephemeralKeyClient = ECKey.fromPublicOnly(encryptionInitial.key);
-            node.ecdhKeySet = ECDH.getSharedSecret(node.ephemeralKeyServer, node.ephemeralKeyClient);
+            node.setEcdhKeySet(ECDH.getSharedSecret(node.ephemeralKeyServer, node.ephemeralKeyClient));
 
             sendInitialMessageIfNotSent();
             onKeyExchangeFinished();
@@ -126,7 +126,7 @@
     }
 
     private void processMessageToBeEncrypted (Message message) {
-        EncryptedMessage encryptedMessage = messageEncrypter.encrypt(message, node.ecdhKeySet);
+        EncryptedMessage encryptedMessage = messageEncrypter.encrypt(message, node.getEcdhKeySet());
         if (OUTPUT_MESSAGE) {
             if (message instanceof Gossip) {
                 if (OUTPUT_GOSSIP) {
